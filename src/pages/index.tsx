import Head from 'next/head';
import { useEffect, useState } from 'react';
import styles from '@component/styles/Home.module.css';
import { Slide } from '../../components/Slide';
import { News } from '../../types/News';
import { SlideMini } from '../../components/Slide copy';
import Introduction from '../../components/Introduction';
import Aos from 'aos';
import 'aos/dist/aos.css';
import Image from 'next/image';
import ImgTransito from '../image/transito1.jpg';
import ImgDanca from '../image/danca1.jpg';
import Caruaru from '../image/caruaru.jpg';
import Link from 'next/link';
import SearchIcon from '@mui/icons-material/Search';
import KeyboardIcon from '@mui/icons-material/Keyboard';
import { signIn, signOut, useSession } from "next-auth/react";


type Props = {
  items: News[];
}

export default function Home({ items }: Props) {
  const { data: session, status: sessionStatus } = useSession();

  const [scrollPosition, setScrollPosition] = useState(0);
  const [top, setTop] = useState(false);

  const [busca, setBusca] = useState('');
    const [filtered, setFiltered] = useState<News[]>([]);
    const [show, setShow] = useState(false);
      
    items.map(function(place, i) {
        useEffect(() => {
            let newFiltered: News[] = [];
            for(let i of items) {
                if(i.title.toLowerCase().indexOf(busca.toLowerCase()) > -1) {
                    newFiltered.push(i);
                }
            }
            setFiltered(newFiltered);
            if(busca) {
                setShow(true);
            } else {
                setShow(false);
            }
        }, [busca]);
    });

  const handleScroll = () => {
      const position = window.pageYOffset;
      setScrollPosition(position);
  };

  useEffect(() => {
    window.addEventListener('scroll', handleScroll, { passive: true });

    return () => {
        window.removeEventListener('scroll', handleScroll);
    };
  }, []);

  useEffect(() => {
    if(scrollPosition >= 1730) {
      setTop(true);
    } else {
      setTop(false);
    }
  }, [scrollPosition]);

  const [w, setW] = useState(false);
  
  useEffect(() => {
    if(typeof window !== "undefined") {
      let s = window.innerWidth;
      if(s > 899) {
        setW(true);
      } else {
        setW(false);
      }
    }
  }, [w]);

  useEffect(() => {
    Aos.init({ duration: 2000 });
  }, []);

  return (
    <>
      <Head>
        <title>Busca Caruaru</title>
        {/* <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" /> */}
      </Head>
      <main className={styles.main}>
        {/* <Slide /> */}

        <div className={styles.caruaru}>
          <h1>Tudo sobre a Capital do Forró em um só lugar.</h1>
        </div>

        <Introduction />
    
        <div className={styles.allNews}>
          

          <Slide />

          <div className={styles.filtered}>
            <h3>Busque sua notícia:</h3>
            <div className={styles.search}>
                <input
                    type="text"
                    value={busca}
                    onChange={(e)=>setBusca(e.target.value)}
                    placeholder="Digite sua busca" />
                {show &&
                    <KeyboardIcon
                        className={styles.icon}
                    />
                }
                {!show &&
                    <SearchIcon
                        className={styles.icon}
                    />
                }
            </div>
          </div>
          
          {show &&
            <div className={styles.body}>
              <div className={styles.adds}>
                {filtered.map((item, index)=>(
                  <div data-aos='fade-up' className={styles.ad} key={index}>
                    <div className={styles.image}>
                      <img
                        src={item.image}
                        alt={item.text}
                      />
                    </div>
                    <div className={styles.adText}>
                      <h3>{item.title}</h3>
                      <small>Publicado: xx/xx/xxxx xxhxx</small>
                      <p>{item.text}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          }

          {!show &&
            <div className={styles.body}>
              <div className={styles.adds}>
                {items.map((item, index)=>(
                  <div data-aos='fade-up' className={styles.ad} key={index}>
                    <div className={styles.image}>
                      <img
                        src={item.image}
                        alt={item.text}
                      />
                    </div>
                    <div className={styles.adText}>
                      <h3>{item.title}</h3>
                      <small>Publicado: xx/xx/xxxx xxhxx</small>
                      <p>{item.text}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          }
        </div>
      </main>
    </>
  )
}

export const getStaticProps = async () => {
  const res = await fetch('https://my-json-server.typicode.com/LuanGitSilva/api-noticias/data');
  const items: News[] = await res.json();
  
  return { 
      props: { items }, 
      revalidate: 3600 
  }
}
